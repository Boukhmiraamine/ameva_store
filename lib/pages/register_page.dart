import 'package:app11/interfaces/Admin/models/usermodel.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';

import 'package:lottie/lottie.dart';
class RegisterPage extends StatefulWidget {
  final VoidCallback showLoginPage;
  const RegisterPage({Key? key,required this.showLoginPage}) : super(key: key);

  @override
  State<RegisterPage> createState() => _RegisterPageState();
}

class _RegisterPageState extends State<RegisterPage> {
  bool _obscureText=true;

  final _formkey = GlobalKey<FormState>();

  // text controllers
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  final _confirmpasswordController = TextEditingController();
  final _firstNameController = TextEditingController();
  final _lastNameController = TextEditingController();

  @override
  void dispose() {
    _emailController.dispose();
    _passwordController.dispose();
    _confirmpasswordController.dispose();
    _firstNameController.dispose();
    _lastNameController.dispose();
    super.dispose();
  }

  Future signUp() async {
    if (passwordConfirmed()) {
      //create user
      UserCredential userCredential = await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: _emailController.text.trim(),
        password: _passwordController.text.trim(),
      );

      //add user details with UID as document ID
      await addUserDetails(
        _firstNameController.text.trim(),
        _lastNameController.text.trim(),
        _emailController.text.trim(),
        userCredential.user!.uid, // Pass the UID generated by Firebase Authentication
      );
    }
  }

  Future addUserDetails(String firstName, String lastName, String email, String uid) async {
    await FirebaseFirestore.instance.collection('users').doc(uid).set({
      'first name': firstName,
      'last name': lastName,
      'email': email,
      'uid': uid, // Set the UID as the document ID in Firestore
    });
  }

  bool passwordConfirmed(){
    if(_passwordController.text.trim()==_confirmpasswordController.text.trim())
      {
        return true;

      }
    else{
      return false;
    }

  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[300],
      body: SingleChildScrollView(
        physics: AlwaysScrollableScrollPhysics(),
        child: Form(
          key: _formkey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Icon(Icons.android,size: 100,),
              SizedBox(height: 90,),

              SizedBox(
                height: 190,
                width: 190,
                child:
                Lottie.asset('images/regiserlottie.json'),
              ),
              //Hello
              Text("Commencer sur Ameva Store!", style: TextStyle(fontWeight:FontWeight.bold,fontSize: 23.0),),
              SizedBox(height: 7.0,),
              Text(
                'Entrez vos coordon√©es ci-dessous',
                style: TextStyle( fontSize: 18,),
              ),


              SizedBox(height: 35,),

              //first name
              Padding(
                padding: const EdgeInsets.symmetric(horizontal:25.0),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[200],
                    border: Border.all(color:Colors.white),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: TextFormField(
                    keyboardType: TextInputType.emailAddress,
                    controller: _firstNameController,
                    decoration: InputDecoration(
                      border:InputBorder.none,
                      contentPadding: EdgeInsets.only(top:14),
                      prefixIcon: Padding(
                        padding: const EdgeInsets.only(left: 30.0,right: 10.0),
                        child: Icon(
                          Icons.person,
                          color: Colors.deepPurple,
                        ),
                      ),
                      hintText: 'First Name',
                      hintStyle: TextStyle(
                        color: Colors.black45,
                      ),
                      enabledBorder: UnderlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide.none,
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide(color: Colors.deepPurple),
                      ),
                    ),

                  ),
                ),
              ),


              SizedBox(height: 13,),

              Padding(
                padding: const EdgeInsets.symmetric(horizontal:25.0),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[200],
                    border: Border.all(color:Colors.white),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: TextFormField(
                    keyboardType: TextInputType.emailAddress,
                    controller: _lastNameController,
                    decoration: InputDecoration(
                      border:InputBorder.none,
                      contentPadding: EdgeInsets.only(top:14),
                      prefixIcon: Padding(
                        padding: const EdgeInsets.only(left: 30.0,right: 10.0),
                        child: Icon(
                          Icons.person,
                          color: Colors.deepPurple,
                        ),
                      ),
                      hintText: 'last Name',
                      hintStyle: TextStyle(
                        color: Colors.black45,
                      ),
                      enabledBorder: UnderlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide.none,
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide(color: Colors.deepPurple),
                      ),
                    ),

                  ),
                ),
              ),


              SizedBox(height: 13,),
              //email textfield
              Padding(
                padding: const EdgeInsets.symmetric(horizontal:25.0),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[200],
                    border: Border.all(color:Colors.white),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: TextFormField(
                    keyboardType: TextInputType.emailAddress,
                    controller: _emailController,
                    decoration: InputDecoration(
                      border:InputBorder.none,
                      contentPadding: EdgeInsets.only(top:14),
                      prefixIcon: Padding(
                        padding: const EdgeInsets.only(left: 30.0,right: 10.0),
                        child: Icon(
                          Icons.mail_outline,
                          color: Colors.deepPurple,
                        ),
                      ),
                      hintText: 'Email',
                      hintStyle: TextStyle(
                        color: Colors.black45,
                      ),
                      enabledBorder: UnderlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide.none,
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide(color: Colors.deepPurple),
                      ),
                    ),

                    validator: (value){
                      bool emailValid =   RegExp(r"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\.[a-zA-Z]+")
                          .hasMatch(value!);
                      if(value!.isEmpty){
                        return "Enter Email";
                      }
                      else if(!emailValid){
                        return "Enter Valid Email ";
                      }
                    },
                  ),
                ),
              ),






              SizedBox(height: 13,),
              //password textField
              Padding(
                padding: const EdgeInsets.symmetric(horizontal:25.0),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[200],
                    border: Border.all(color:Colors.white),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: TextFormField(
                    controller: _passwordController,
                    obscureText: _obscureText,
                    decoration: InputDecoration(
                      border:InputBorder.none,
                      prefixIcon: Padding(
                        padding: const EdgeInsets.only(left: 30.0,right: 10.0),
                        child: Icon(
                          Icons.lock_outline,
                          color: Colors.deepPurple,
                        ),
                      ),
                      suffixIcon: GestureDetector(onTap: (){
                        setState(()
                        {
                          _obscureText=! _obscureText;
                        });

                      }, child: Icon(_obscureText? Icons.visibility: Icons.visibility_off),
                      ),
                      hintText: 'Password',
                      hintStyle: TextStyle(
                        color: Colors.black45,
                      ),
                      enabledBorder: UnderlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide.none,
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide(color: Colors.deepPurple),
                      ),
                    ),

                    validator: (value){
                      if(value!.isEmpty){
                        return "Enter Password";
                      }
                      else if(_passwordController.text.length <6){
                        return "Password Lenght should not be more than 6 characters";
                      }
                    },
                  ),
                ),
              ),

              SizedBox(height: 13,),

              //confirm password textField
              Padding(
                padding: const EdgeInsets.symmetric(horizontal:25.0),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.grey[200],
                    border: Border.all(color:Colors.white),
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: TextFormField(
                    controller: _confirmpasswordController,
                    obscureText: _obscureText,
                    decoration: InputDecoration(
                      border:InputBorder.none,
                      prefixIcon: Padding(
                        padding: const EdgeInsets.only(left: 30.0,right: 10.0),
                        child: Icon(
                          Icons.lock_outline,
                          color: Colors.deepPurple,
                        ),
                      ),
                      suffixIcon: GestureDetector(onTap: (){
                        setState(()
                        {
                          _obscureText=! _obscureText;
                        });

                      }, child: Icon(_obscureText? Icons.visibility: Icons.visibility_off),
                      ),
                      hintText: 'Confirm Password',
                      hintStyle: TextStyle(
                        color: Colors.black45,
                      ),
                      enabledBorder: UnderlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide.none,
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        borderSide: BorderSide(color: Colors.deepPurple),
                      ),
                    ),

                    validator: (value){
                      if(value!.isEmpty){
                        return "Enter Password";
                      }
                      else if(_passwordController.text.length <6){
                        return "Password Lenght should not be more than 6 characters";
                      }
                    },
                  ),
                ),
              ),


              SizedBox(height: 13,),
              //sign in button
              Padding(
                padding: const EdgeInsets.symmetric(horizontal:25.0),
                child: GestureDetector(
                  onTap: signUp,
                  /*(){
                    if(_formkey.currentState!.validate()) {
                    print("login");
                    signIn;

                    }
                },*/
                  child: Container(
                    padding: EdgeInsets.all(20),
                    decoration: BoxDecoration(color: Colors.deepPurple,
                        borderRadius: BorderRadius.circular(12)),
                    child: Center(
                      child: Text('S\u0027inscrire',style: TextStyle(
                        color: Colors.white,
                        fontWeight: FontWeight.bold,
                        fontSize: 18,),
                      ),
                    ),
                  ),
                ),
              ),
              SizedBox(height: 25,),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text("Vous avez d√©j√† un compte ? ",style: TextStyle(fontWeight: FontWeight.bold),),
                  GestureDetector(onTap: widget.showLoginPage,
                      child: Text("Se connecter ",style: TextStyle(color: Colors.blue,fontWeight: FontWeight.bold),)),

                ],
              )
            ],
          ),
        ),
      ),
    );
  }
}
